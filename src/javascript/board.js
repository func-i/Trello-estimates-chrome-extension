// Generated by CoffeeScript 1.10.0
(function() {
  var addCardStats, ajaxCalls, ajaxErrorAlert, app, assignCardClass, boardCards, boardPattern, cardStatsHtml, compareCardStats, getCardsOnBoard, serverURL, setCardBackground, showUpdatedCards, updateCards;

  app = window.trelloEstimationApp;

  serverURL = app.serverURL;

  ajaxCalls = app.ajaxCalls;

  ajaxErrorAlert = app.ajaxErrorAlert;

  boardPattern = /^https:\/\/trello.com\/b\/(\S+)\/(\S+)$/;

  boardCards = {};

  compareCardStats = function(oldCards, newCards) {
    var diffCards, id, oldStats, stats;
    diffCards = {};
    for (id in newCards) {
      stats = newCards[id];
      oldStats = oldCards[id];
      if (!oldStats || oldStats.estimate !== stats.estimate || oldStats.tracked !== stats.tracked) {
        diffCards[id] = stats;
      }
    }
    console.log(diffCards);
    return diffCards;
  };

  cardStatsHtml = function(stats) {
    var html;
    html = "[";
    if (stats.estimate) {
      html += stats.estimate + " hrs";
      if (stats.tracked) {
        html += " / ";
      }
    }
    if (stats.tracked) {
      html += stats.tracked + " hrs";
    }
    return html += "]";
  };

  addCardStats = function(cardTitle, stats) {
    var statsDiv, statsHtml;
    statsDiv = cardTitle.next(".card-fi-stats");
    statsHtml = cardStatsHtml(stats);
    if (statsDiv.length === 0) {
      statsHtml = "<div class='card-fi-stats'>" + statsHtml + "</div>";
      return cardTitle.after(statsHtml);
    } else {
      return statsDiv.empty().append(statsHtml);
    }
  };

  assignCardClass = function(card, cardClass) {
    var classArr;
    classArr = ["fi-card-estimate", "fi-card-warning", "fi-card-overtime"];
    if (cardClass) {
      classArr.splice(classArr.indexOf(cardClass), 1);
      card.addClass(cardClass);
    }
    return card.removeClass(classArr.join(" "));
  };

  setCardBackground = function(cardTitle, stats) {
    var card, lowerBound, upperBound;
    card = cardTitle.parent();
    lowerBound = stats.estimate * 0.85;
    upperBound = stats.estimate * 1.15;
    if (stats.estimate) {
      if (!stats.tracked || stats.tracked < lowerBound) {
        return assignCardClass(card, "fi-card-estimate");
      } else if (stats.tracked > upperBound) {
        return assignCardClass(card, "fi-card-overtime");
      } else {
        return assignCardClass(card, "fi-card-warning");
      }
    } else {
      return assignCardClass(card, null);
    }
  };

  showUpdatedCards = function(cards) {
    var cardTitle, cardTitles, id, results, stats;
    cardTitles = $(".list-card-title");
    results = [];
    for (id in cards) {
      stats = cards[id];
      cardTitle = cardTitles.filter("a[href^='/c/" + id + "/']");
      results.push(addCardStats(cardTitle, stats));
    }
    return results;
  };

  updateCards = function(response) {
    var diffCards, oldCards;
    oldCards = JSON.parse(JSON.stringify(boardCards));
    boardCards = response;
    diffCards = compareCardStats(oldCards, boardCards);
    return showUpdatedCards(diffCards);
  };

  getCardsOnBoard = function() {
    return ajaxCalls.push($.ajax(serverURL + "/estimations", {
      data: {
        board_id: app.getTargetId(boardPattern),
        member_name: app.getUsername()
      },
      success: updateCards,
      error: ajaxErrorAlert
    }));
  };


  /* App-level functions */

  app.boardIsOpen = function() {
    return document.URL.indexOf("trello.com/b/") >= 0;
  };

  app.loadBoard = function() {
    return getCardsOnBoard();
  };

}).call(this);
