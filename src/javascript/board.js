// Generated by CoffeeScript 1.10.0
(function() {
  var ajaxCalls, ajaxErrorAlert, app, boardCards, boardPattern, cardStatsHtml, compareCardStats, getCardsOnBoard, serverURL, showUpdatedStats, updateCards;

  app = window.trelloEstimationApp;

  serverURL = app.serverURL;

  ajaxCalls = app.ajaxCalls;

  ajaxErrorAlert = app.ajaxErrorAlert;

  boardPattern = /^https:\/\/trello.com\/b\/(\S+)\/(\S+)$/;

  boardCards = {};

  compareCardStats = function(oldCards, newCards) {
    var diffCards, id, oldStats, stats;
    diffCards = {};
    for (id in newCards) {
      stats = newCards[id];
      oldStats = oldCards[id];
      if (!oldStats || oldStats.estimate !== stats.estimate || oldStats.tracked !== stats.tracked) {
        diffCards[id] = stats;
      }
    }
    console.log(diffCards);
    return diffCards;
  };

  cardStatsHtml = function(stats) {
    var html, trackClass;
    html = "";
    if (stats.estimate) {
      html += "<span class='card-fi-estimate'>estimate: " + stats.estimate + "</span>";
      if (stats.tracked) {
        html += " | ";
      }
    }
    if (stats.tracked) {
      trackClass = "card-fi-tracked";
      if (stats.estimate && stats.tracked > stats.estimate) {
        trackClass += " tracked-over-estimate";
      }
      html += "<span class='" + trackClass + "'>tracked: " + stats.tracked + "</span>";
    }
    return html;
  };

  showUpdatedStats = function(cards) {
    var cardTitle, cardTitles, id, results, stats, statsDiv, statsHtml;
    cardTitles = $(".list-card-title");
    results = [];
    for (id in cards) {
      stats = cards[id];
      cardTitle = cardTitles.filter("a[href^='/c/" + id + "/']");
      statsDiv = cardTitle.next(".card-fi-stats");
      statsHtml = cardStatsHtml(stats);
      if (statsDiv.length === 0) {
        statsHtml = "<div class='card-fi-stats'>" + statsHtml + "</div>";
        results.push(cardTitle.after(statsHtml));
      } else {
        results.push(statsDiv.empty().append(statsHtml));
      }
    }
    return results;
  };

  updateCards = function(response) {
    var diffCards, oldCards;
    oldCards = JSON.parse(JSON.stringify(boardCards));
    boardCards = response;
    diffCards = compareCardStats(oldCards, boardCards);
    return showUpdatedStats(diffCards);
  };

  getCardsOnBoard = function() {
    return ajaxCalls.push($.ajax(serverURL + "/estimations", {
      data: {
        board_id: app.getTargetId(boardPattern),
        member_name: app.getUsername()
      },
      success: updateCards,
      error: ajaxErrorAlert
    }));
  };


  /* App-level functions */

  app.boardIsOpen = function() {
    return document.URL.indexOf("trello.com/b/") >= 0;
  };

  app.loadBoard = function() {
    return getCardsOnBoard();
  };

}).call(this);
